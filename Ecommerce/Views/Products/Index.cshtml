@using Microsoft.AspNetCore.Html
@model List<Product>
@{
    var categories = ViewData["Categories"] as List<string> ?? new List<string>();
    var selectedCategory = ViewData["SelectedCategory"] as string;
    ViewData["ProductPage"] = true;
    int pageIndex = (int)ViewData["PageIndex"]!;
    int totalPages = (int)ViewData["TotalPages"]!;

    string search = (string)ViewData["Search"]!;

    string column = (string)ViewData["Column"]!;
    string orderBy = (string)ViewData["OrderBy"]!;

    HtmlString getArrow(string tableColumn)
    {
        if (tableColumn != column) return new HtmlString("");

        // Descending => down
        // Ascending => up
        if (orderBy == "desc")
        {
            return new HtmlString("<i class='bi bi-arrow-down'></i>");
        }
        return new HtmlString("<i class='bi bi-arrow-up'></i>");
    }
}
<style>
    html, body {
        overflow-x: hidden;
    }

    ::selection {
        color: white;
        background-color: black;
    }

    body {
        height: 100%;
        margin: 0;
        justify-content: center;
        align-items: center;
        background-color: #f9f9f9;
    }

    .profile-container {
        max-width: 95%;
        margin-top: 110px;
        margin-bottom: 110px;
        padding: 50px;
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .pagination .page-item.active .page-link {
        background-color: black;
        border-color: black;
        color: white;
    }

    .pagination {
        display: flex; /* ใช้ Flexbox เพื่อจัด layout ให้ปุ่มเรียงในแถวเดียวกัน */
        flex-wrap: wrap; /* อนุญาตให้ขึ้นบรรทัดใหม่เมื่อพื้นที่ไม่พอ */
        justify-content: center;
        gap: 5px; /* เว้นระยะห่างระหว่างปุ่ม */
    }

    .page-item {
        flex: 0 1 auto; /* ให้ปุ่มขยายเท่าที่จำเป็น และไม่กินพื้นที่มากเกิน */
    }

    .page-link {
        display: inline-block;
        padding: 8px 15px;
        text-align: center;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis; /* เพิ่ม "..." เมื่อข้อความยาวเกิน */
        font-size: 14px;
    }

    .profile-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .btn-primary {
        background-color: #0071e3;
        border: none;
    }

    .btn-primary:hover {
        background-color: #005bb5;
    }

    .form-text a {
        color: #0071e3;
    }

    .form-text a:hover {
        color: #005bb5;
    }

    .btn {
        border: none;
        box-shadow: none;
    }

    .btn-submit {
        background-color: white;
        height: 50px;
        border: 1px solid #2e2e2e;
        border-radius: 25px;
        transition: background-color 0.3s ease, transform 0.2s;
    }

    .btn-submit:hover {
        background-color: #2e2e2e;
        color: white;
        transform: translateY(-2px);
    }
    
    .btn-submit:active {
        transform: scale(0.99);
        outline: none;
        box-shadow: none;
        transform: scale(0.98);
    }

    .btn-product {
        background-color: white;
        border: 1px solid #2e2e2e;
        transition: background-color 0.3s ease, transform 0.2s;
    }

    .btn-product:hover {
        background-color: #2e2e2e;
        color: white;
        transform: translateY(-2px);
    }
    
    .btn-product:active {
        transform: scale(0.99);
        outline: none;
        box-shadow: none;
        transform: scale(0.98);
    }

    .btn-product2 {
        background-color: black;
        color: White;
        border: 1px solid #2e2e2e;
        transition: background-color 0.3s ease, transform 0.2s;
    }

    .btn-product2:hover {
        background-color: White;
        color: #2e2e2e;
        transform: translateY(-2px);
    }
    
    .btn-product2:active {
        transform: scale(0.99);
        outline: none;
        box-shadow: none;
        transform: scale(0.98);
    }

    .btn-details{
        background-color: white;
        border: 1px solid #2e2e2e;
        border-radius: 15px;
        transition: background-color 0.3s ease, transform 0.2s;
    }

    .btn-details:hover {
        background-color: #2e2e2e;
        color: white;
        transform: translateY(-2px);
    }

    .btn-details:active {
        transform: scale(0.99);
        outline: none;
        box-shadow: none;
        transform: scale(0.98);
    }

    .btn-status {
        width: 90px;
        background-color: white;
        border-radius: 15px;
        transition: background-color 0.3s ease, transform 0.2s;
    }

    .form-text a {
        color: black;
        text-decoration: none;
        position: relative;
        display: inline-block;
    }

    .form-text a::after {
        content: '';
        position: absolute;
        width: 0;
        height: 2px;
        display: block;
        background: black;
        transition: width 0.3s ease;
        left: 0;
        bottom: -3px;
    }
    
    .form-text a:hover::after {
        width: 100%;
    }
    
    .form-text a:hover {
        color: black;
    }

    input.form-control {
        border: 1px solid #ccc;
        border-radius: 8px;
        transition: border-color 0.3s ease, border-radius 0.3s ease;
    }

    input.form-control:focus {
        outline: none;
        border-color: black;
        box-shadow: none;
    }

    /* Floating label style */
    .form-floating {
        position: relative;
    }

    .form-floating label {
        padding-left: 10px;
        color: #666;
        transition: all 0.3s ease;
        position: absolute;
    }

    .form-control:not(:placeholder-shown) + label,
    .form-control:focus + label {
        top: -1px;
        left: 2px;
        font-size: 0.9rem;
        color: black;
    }

    input.form-check-input {
        width: 20px;
        height: 20px;
        border: 2px solid #ccc;
        border-radius: 4px;
        background-color: white;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    /* เมื่อ checkbox ถูกเลือก (checked) */
    input.form-check-input:checked {
        background-color: #0071e3; /* เปลี่ยนสีพื้นหลัง */
        border-color: #005bb5; /* เปลี่ยนสีกรอบ */
    }

    input.form-check-input:hover {
        border-color: #005bb5; /* เปลี่ยนสีกรอบเมื่อ hover */
    }

    .card-img-top {
        transition: transform 0.3s ease;
    }

    .card-img-top:hover {
        transform: scale(1.1);
    }

    .brand-color {
        color: #FCCD2A;
    }

    .category-color {
        color: #33c4ff;
    }

    .price-color {
        color: #ff5733;
    }

    .date-color {
        color: #6c757d;
    }
    
    .mt-6 {
        margin-top: 6rem;
    }

    .form-select:focus {
        outline: none;
        border-color: black;
        box-shadow: none;

    .btn-container {
        display: flex;
        gap: 10px;
        justify-content: center;
    }

    .btn-status {
        width: 90px;
        background-color: white;
        border-radius: 15px;
        transition: background-color 0.3s ease, transform 0.2s; /* เพิ่มแอนิเมชัน */
        cursor: pointer; /* เปลี่ยน cursor ให้เป็น pointer เพื่อสื่อว่าสามารถกดได้ */
        padding: 0.5rem 0.75rem; /* เพิ่มพื้นที่รอบ ๆ เพื่อให้อ่านง่ายขึ้น */
        font-size: 1rem; /* ปรับขนาดฟอนต์ให้เหมาะสม */
    }

    .btn-status:hover {
        background-color: #e9ecef; /* เปลี่ยนสีพื้นหลังเมื่อ hover */
        transform: scale(1.05); /* ขยายปุ่มเล็กน้อยเมื่อ hover */
    }

    .form-select {
        cursor: pointer;
    }

    al-b {
        color: #6c757d;
    }

</style>

<script>
    function sortTable(column) {
        let orderBy = "desc";
        let currentColumn = "@column";
        let currentOrder = "@orderBy";
        if (column === currentColumn) {
            if (currentOrder == "asc") orderBy = "desc";
            else orderBy = "asc";
        }
        window.location.href = "?search=@(search)&selectedCategory=@(ViewData["SelectedCategory"])&column=" + column + "&orderBy=" + orderBy;
    }
</script>

<div class="container-fluid p-3" style="background-color: #f9f9f9;">

    <div class="mx-auto mt-6" style="background-color: #fff; width: 95%; margin-bottom: 1.5rem; border-radius: 15px; padding: 2rem; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);">
        <div class="d-flex align-items-center mt-2 mb-4" style="width: 100%;">
            <h2 class="" style="margin-left: 0.5rem; margin-bottom: 0;">LIST OF PRODUCTS</h2>
        </div>
        


        <div class="row mb-4 justify-content-between">
            <!-- Search Button -->
            <form class="col-6 d-flex w-25">
                <input class="form-control me-2" type="search" name="search" value="@search" placeholder="Search by name or brand" aria-label="Search">
                <button class="btn btn-product border border-dark" type="submit">Search</button>
            </form>
            <div class="col-6 d-flex justify-content-end">
                <!-- Filter Category -->
                <form class="me-3" style="width: 20%;" method="get" asp-controller="Products" asp-action="Index">
                    <select class="form-select" name="selectedCategory" onchange="this.form.submit()" style="cursor: pointer;">
                        <option value="">Category</option>
                        @foreach (var category in ViewData["Categories"] as List<string>)
                        {
                            <option value="@category" onclick="selectedCategory(@category)">@category</option>
                        }
                    </select>
                </form>

                <!-- Sort Date -->
                <div class="me-3">
                    <button type="button" class="btn btn-product border border-dark" onclick="sortTable('CreatedAt')">Last added @getArrow("CreatedAt")</button>
                </div>
                
                <div class="">
                    <a class="btn btn-product2 border border-dark justify-content-end" asp-controller="Products" asp-action="Create">New Product</a>
                </div>

            </div>
        </div>

        <!-- All Product -->
        <div class="row row-cols-1 row-cols-md-5 g-4 mb-3">
            @foreach (var product in Model)
            {
                <div class="col">
                    <div class="card d-flex flex-column" style="height: 100%;">
                        <span class="position-absolute badge rounded-pill bg-dark align-content-center z-3" style="width: 10%; height: 5%; top: 10px; left: 10px;">@product.Id</span>

                        <img src="/products/@product.ImageFileName" class="card-img-top" alt="@product.Name" style="height: 400px; object-fit: cover; cursor: pointer;" data-bs-toggle="modal" data-bs-target="#imageModal-@product.Id"/>
                        
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>
                            <h6 class="card-subtitle mb-2 al-b">@product.Brand</h6>
                            <h6 class="card-subtitle mb-2 al-b">@product.Category</h6>
                            <h6 class="card-subtitle mb-2 al-b">$@(@product.Price)</h6>
                            <p class="card-subtitle mb-2 date-color" style="font-size: 12px;">@product.CreatedAt.ToString("dd MMMM yyyy")</p>
                            <p class="card-text" style="font-size: 12px;">@product.Description</p>
                        </div>
                        <div class="card-footer">
                            <div class="w-100 d-flex justify-content-between">
                                <a class="btn btn-product2 btn-sm flex-fill w-50 me-2" asp-controller="Products" asp-action="Edit" asp-route-id="@product.Id">Edit</a>
                                <button type="button" class="btn btn-product btn-sm flex-fill w-50 ms-2" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal-@product.Id">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal Image Detail -->
                <div class="modal fade" id="imageModal-@product.Id" tabindex="-1" aria-labelledby="imageModalLabel-@product.Id" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="imageModalLabel-@product.Id">@product.Name</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body d-flex justify-content-center">
                                <img src="/products/@product.ImageFileName" class="img-fluid" alt="@product.Name" />
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal For Alert -->
                <div class="modal fade" id="confirmDeleteModal-@product.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
								<p>Are you sure you want to delete this product?</p>

                            <div class="row">
                                <div class="col-6">
                                    <a href="@Url.Action("Delete", "Products", new { id = @product.Id })" class="btn btn-submit border border-dark w-100" style="padding: 11px;">Delete</a>
                                </div>
                                <div class="col-6">
                                    <button type="button" class="btn btn-submit border border-dark w-100" data-bs-dismiss="modal">Cancel</button>
                                </div>
							</div>
							</div>
                        </div>
                    </div>
                </div>

            }
        </div>

        <nav>
            <ul class="pagination justify-content-end">
                @for (int i = 1; i <= totalPages; i++)
                {
                    string active = "";
                    if (i == pageIndex) active = "active";
                    <li class="page-item @active">
                        <a class="page-link" asp-route-pageIndex="@i" asp-route-search="@search"
                           asp-route-column="@column" asp-route-orderBy="@orderBy">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
